#!/bin/bash
set -e
# Create ENV HAPROXY_DOMAIN
WKD="./"
docker ps | grep WEB_ | awk '{print $1}' > ${WKD}running_web_container_cid
docker ps | grep WEB_ | awk '{print $NF}' > ${WKD}running_web_container_name
docker ps | grep WEB_ | docker inspect --format '{{ .NetworkSettings.IPAddress }}' $(awk '{print $NF}') > ${WKD}running_web_container_ip
paste -d ' ' ${WKD}running_web_container_cid ${WKD}running_web_container_ip ${WKD}running_web_container_name > ${WKD}running_web_containers_cid_ip_name
# Removing Intermediated Files
rm -rf ${WKD}running_web_container_cid  ${WKD}running_web_container_ip ${WKD}running_web_container_name ${WKD}acl_list use_list ${WKD}backend_*

### Adding Extra Routes Static
echo -e "acl by_host_cb hdr(host) -i cb.dspeed.eu"  >> ${WKD}acl_list
echo -e "use_backend cb if by_host_cb" >> ${WKD}use_list
echo -e "\n\
backend cb \n\
  balance leastconn \n\
  option httpclose \n\
  option forwardfor \n\
  cookie JSESSIONID prefix" > ${WKD}backend_cb
echo -e "    server cbmain 172.17.2.181:7081 cookie A check" >> ${WKD}backend_cb_nodelist
echo "Added CB Costum Backend with 172.17.2.181:7081"


# DYNAMIC binding using dspeed-docker-tools dcip and count
# create a file for every active node
while IFS=" " read cid ip name; do

  # creating the backend and use role, acl
  HAPROXY_DOMAIN="$(docker $DHOST inspect $cid | grep HAPROXY_DOMAIN | sed 's/\"//' | sed 's/HAPROXY_DOMAIN//' | sed 's/=//' | sed 's/\"//' | sed 's/,//')"
  ### Checks
# if [ -z "$BACKEND_ID" ]; then
#	echo "No Backend ID"
#	exit 1
#fi

##### check if we get a node
#if [ -z "$BACKEND_NODES" ]; then
#        echo "No Backend NODES"
#        exit 1
#fi
  
  
  
  if [ -z "$HAPROXY_DOMAIN" ]; then 
    # Variable is empty
    echo "$name got no domain set plz add one \n"
    echo ADD the ENV var HAPROXY_DOMAIN = 'yourdomain.com'
    BACKEND=$name
  fi
  
  if [ -z "$HAPROXY_PORT" ]; then 
    # Variable is empty
    echo "$name got no Port set plz add one or i use 80 \n"
    echo ADD the ENV var HAPROXY_PORT = '80'
    HAPROXY_PORT="80"
  fi
  
  BACKEND=$HAPROXY_DOMAIN
  
  # Printing Some Status Infos
  echo -e "
  CID : $cid\n\
  IP :\t $ip\n\
  FULLNAME :\t $name\n\
  BACKENDNAME: \t $BACKEND\n\
  HAPROXY_DOMAIN:\t $HAPROXY_DOMAIN\n\
  HAPROXY_PORT:\t $HAPROXY_PORT\n\
  URLS:\t ${name}.${YOUR_HOST}, ${cid}.${YOUR_HOST}, ${HAPROXY_DOMAIN}\n\n"
  
  echo -e "acl by_host_$BACKEND hdr(host) -i ${name}.${YOUR_HOST} -i ${cid}.${YOUR_HOST} -i ${HAPROXY_DOMAIN}" >> ${WKD}acl_list
  echo -e "use_backend $BACKEND if by_host_$BACKEND" >> ${WKD}use_list
  echo -e "    server $cid $ip:${HAPROXY_PORT} cookie A check" >> "${WKD}backend_${BACKEND}_nodelist"
  echo -e "\n\
  backend ${BACKEND} \n\
    mode http \n\
    option httplog \n\
    option http-server-close \n\
    option forwardfor \n\
    cookie JSESSIONID prefix" > "backend_${BACKEND}"

done < ${WKD}running_web_containers_cid_ip_name




###################################
# METHOD Merge all HAPROXY-CFG & ACL & USE & BACKEND
##################################
rm -rf ${WKD}prepared.haproxy.cfg
cat << EOF > ${WKD}prepared.haproxy.cfg
global
        log 127.0.0.1 local0
        log 127.0.0.1 local1 notice
        chroot /var/lib/haproxy


defaults
        log global
        retries 3
        maxconn 2000
        contimeout 5000
        clitimeout 50000
        srvtimeout 50000
        stats enable
        stats auth admin:admin
        stats uri /haproxy
        monitor-uri /health
        mode http
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
  

frontend http-in
        bind *:80
      # default_backend server
        bind 0.0.0.0:443 transparent
      # default_backend server
      
EOF

echo -e "\n # Acl Roles" >> ${WKD}prepared.haproxy.cfg
cat acl_list >> ${WKD}prepared.haproxy.cfg
echo -e "\n # Use Roles" >> ${WKD}prepared.haproxy.cfg
cat use_list >> ${WKD}prepared.haproxy.cfg
echo -e "\n # The Backends with nodes" >> ${WKD}prepared.haproxy.cfg
cat backend_* >> ${WKD}prepared.haproxy.cfg
echo "Done: prepared.haproxy.cfg"
rm -rf ${WKD}running_web_container_cid  ${WKD}running_web_container_ip ${WKD}running_web_container_name ${WKD}acl_list use_list ${WKD}backend_* ${WKD}running_web_containers_cid_ip_name
echo "Done: clean up rm -rf ${WKD}running_web_container_cid  ${WKD}running_web_container_ip ${WKD}running_web_container_name ${WKD}acl_list use_list ${WKD}backend_* ${WKD}running_web_containers_cid_ip_name"
sudo mv ${WKD}prepared.haproxy.cfg /etc/haproxy/haproxy.cfg
cat /etc/haproxy/haproxy.cfg
echo "Done: ----------COPY OVER------------------ "
haproxy -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -V -db -de -m 16
